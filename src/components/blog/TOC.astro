---
import { generateToc } from "@/utils/generateToc";
import type { MarkdownHeading } from "astro";
import TOCHeading from "./TOCHeading.astro";
import { Icon } from "astro-icon/components";

interface Props {
	headings: MarkdownHeading[];
}

const { headings } = Astro.props;

const toc = generateToc(headings);
---

<div class="sticky top-20 bg-color-75 border border-special-light rounded-xl p-6">
	<div class="sticky top-20">
		<div class="flex items-end title  gap-x-1">
			<!--
			<Icon aria-hidden="true" class="flex-shrink-0 h-8 w-6 py-1" focusable="false" name="solar:clipboard-list-line-duotone" />
			-->
			<h4 class="title">Table of Contents</h4>
			<button
				id="close-toc"
				class="absolute top-[-12px] right-[-12px] h-8 w-8 flex items-center justify-center rounded-lg bg-accent-base/5 text-accent-base hover:bg-accent-base/10"
				aria-label="Close TOC"
			>
				<Icon aria-hidden="true" class="h-6 w-6" focusable="false" name="hugeicons:cancel-01" />
			</button>
			
		</div>
	</div>
  <div class="max-h-[calc(100vh-11rem)] h-auto overflow-y-auto overflow-hidden">
    <ul class="text-sm font-medium text-textColor">
      {toc.map((heading) => <TOCHeading heading={heading} />)}
    </ul>
  </div>
</div>
